# WARNING: THIS FILE HAS BEEN AUTOGENERATED DO NOT EDIT IT!!!

### Stage: Base ###

FROM {{ service.manifest.base_image }} as base
RUN apt-get update -y && apt-get upgrade -y && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# As a convention, the workdir should always be the project root dir inside the container.
WORKDIR /opt/fastiot

# As a convention, the python source files should always be placed inside src-dir.
RUN mkdir /opt/fastiot/src
ENV PYTHONPATH=$PYTHONPATH:/opt/fastiot/src

# Install requirements
COPY install.sh ./
COPY requirements/requirements.txt ./requirements/
RUN FASTIOT_EXTRA_PYPI={{extra_pypi}} /bin/bash -e install.sh

{% if service.manifest.additional_requirements %}
{% for req in service.manifest.additional_requirements %}
COPY requirements/requirements.{{ req }}.txt ./requirements/
{% endfor %}
RUN FASTIOT_EXTRA_PYPI={{extra_pypi}} /bin/bash -e install.sh
{% endif %}

{% if service.manifest.healthcheck.cmd != '' %}
HEALTHCHECK \
    --interval={{ service.manifest.healthcheck.interval }} \
    --timeout={{ service.manifest.healthcheck.timeout }} \
    --start-period={{ service.manifest.healthcheck.start_period }} \
    --retries={{ service.manifest.healthcheck.retries }} \
    CMD {{ service.manifest.healthcheck.cmd }}
{% endif %}

{% if service.manifest.vue %}
### Stage: vue.js ###
FROM node:14-buster-slim as build-vue
WORKDIR /opt/vue_app
COPY src/{{ service.package }}/{{ service.name }}/{{service.manifest.vue.src}}/package*.json /opt/vue_app/
RUN npm install
COPY src/{{ service.package }}/{{ service.name }}/{{service.manifest.vue.src}} /opt/vue_app/
RUN npm run build
{% endif %}

### Stage: Debug ###
FROM base as debug
# In debug mode we just want to copy everything from source to make it easier.
{% if service.manifest.vue %}
COPY --from=build-vue /opt/vue_app/{{ service.manifest.vue.configured_dist }} src/{{ service.package }}/{{ service.name }}/{{ service.manifest.vue.dst }}
{% endif %}
{% if project_config.library_package %}
COPY src/{{project_config.library_package}} /opt/fastiot/src/{{project_config.library_package}}
{% endif %}
COPY src/{{ service.package }} /opt/fastiot/src/{{ service.package }}
COPY src/{{ service.package }}/{{ service.name }}/manifest.yaml /opt/fastiot/manifest.yaml
CMD ["python",  "/opt/fastiot/src/{{ service.package }}/{{ service.name }}/run.py"]


### Stage: Compile ###
FROM base as compile_lib
# In release mode we want to compile everything and only copy compiled artifacts into release container.
# The compilation takes place in this stage, so we need to compile it accordingly.
RUN apt-get update -y && apt-get install -y gcc make build-essential
RUN python3 -m pip install --extra-index-url http://{{ extra_pypi }} --trusted-host {{ extra_pypi }} "fastiot[compile]"

COPY configure.py /opt/fastiot/

COPY src /opt/fastiot/src

{% if project_config.library_package %}
RUN fiot extras nuitka-compile --src-dir=/opt/fastiot/src --out-dir=/opt/fastiot/output {{ project_config.library_package }}
{% endif %}

RUN fiot extras nuitka-compile --src-dir=/opt/fastiot/src --out-dir=/opt/fastiot/output {{ service.package }}


### Stage: Release ###
FROM base

# Nuitka compiles "__file__"-variable relative to current location. So we have to place everything inside "/opt/fastiot/src".
COPY --from=compile_lib /opt/fastiot/output/*.so /opt/fastiot/src/
COPY --from=compile_lib /opt/fastiot/src/{{ service.package }}/{{ service.name }}/run.py /opt/fastiot/src/{{ service.package }}/{{ service.name }}/run.py
{% for service_dir_to_copy in service.manifest.copy_dirs_to_container %}
COPY --from=compile_lib /opt/fastiot/src/{{ service.package }}/{{ service.name }}/{{ service_dir_to_copy }} /opt/fastiot/src/{{ service.package }}/{{ service.name }}/{{ module_dir_to_copy }}
{% endfor %}

{% if service.manifest.vue %}
COPY --from=build-vue /opt/vue_app/{{ service.manifest.vue.configured_dist }} src/{{ service.package }}/{{ service.name }}/{{ service.manifest.vue.dst }}
{% endif %}

COPY src/{{ service.package }}/{{ service.name }}/manifest.yaml /opt/fastiot/manifest.yaml
MAINTAINER {{ maintainer }}
CMD ["python",  "/opt/fastiot/src/{{ service.package }}/{{ service.name }}/run.py"]
