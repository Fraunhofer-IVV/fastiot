#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Author: Douglas Creager <dcreager@dcreager.net> with additions by Fraunhofer IVV, DD
# This file is placed into the public domain.
# Calculates the current version number.  If possible, this is the
# output of “git describe”, modified to conform to the versioning
# scheme that setuptools uses.  If “git describe” returns an error
# (most likely because we're in an unpacked copy of a release tarball,
# rather than in a git working copy), then we fall back on reading the
# contents of the RELEASE-VERSION file.
#
# To use this script, simply import it your setup.py file, and use the
# results of get_git_version() as your package version:
#
# from version import *
#
# setup(
#     version=get_git_version(),
#     .
#     .
#     .
# )
#
#
# This will automatically update the RELEASE-VERSION file, if
# necessary.  Note that the RELEASE-VERSION file should *not* be
# checked into git; please add it to your top-level .gitignore file.
#
# You'll probably want to distribute the RELEASE-VERSION file in your
# sdist tarballs; to do this, just create a MANIFEST.in file that
# contains the following line:
#
#   include RELEASE-VERSION



import argparse

from fastiot.cli.version import get_version


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Shows current version depending on git commits and tags")
    parser.add_argument('--complete', default=False, type=bool, required=False,
                        help="Show complete version string starting (Used if nothing else is specified)")
    parser.add_argument('--only_major', default=False, type=bool, required=False,
                        help="Show only the major version as number")
    parser.add_argument('--minor', default=False, type=bool, required=False,
                        help="Show major.minor version")
    args = vars(parser.parse_args())

    print(get_version(**args))

